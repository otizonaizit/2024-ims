data = """2 100 2 0.02527308464050293
4 100 2 0.002032756805419922
6 100 2 0.003471851348876953
8 100 2 0.002282857894897461
2 100 4 0.025890111923217773
2 100 6 0.026950359344482422
4 100 4 0.0025129318237304688
4 100 6 0.0025129318237304688
6 100 4 0.0025191307067871094
6 100 6 0.0035266876220703125
8 100 4 0.003986835479736328
8 100 6 0.003980875015258789
2 500 2 0.01191258430480957
2 500 4 0.012323856353759766
4 500 2 0.014490365982055664
2 500 6 0.021497488021850586
2 100 8 0.030617713928222656
4 100 8 0.006133317947387695
4 500 4 0.01943182945251465
6 500 2 0.018251419067382812
4 500 6 0.016258716583251953
6 100 8 0.01199650764465332
6 500 4 0.020217418670654297
8 100 8 0.009222269058227539
8 500 2 0.0293581485748291
6 500 6 0.027357816696166992
2 500 8 0.02307295799255371
8 500 4 0.027148008346557617
8 500 6 0.03667426109313965
4 500 8 0.046685218811035156
6 500 8 0.022006750106811523
2 1000 2 0.0975334644317627
2 1000 4 0.09569382667541504
8 500 8 0.03101205825805664
2 1000 6 0.09958386421203613
2 1000 8 0.09200930595397949
4 1000 2 0.14321494102478027
4 1000 4 0.15724563598632812
4 1000 6 0.1406724452972412
4 1000 8 0.11862683296203613
6 1000 2 0.1235816478729248
6 1000 6 0.1286008358001709
6 1000 4 0.16412115097045898
6 1000 8 0.12871694564819336
8 1000 2 0.15050387382507324
8 1000 6 0.12807345390319824
8 1000 4 0.11652898788452148
8 1000 8 0.1018531322479248
2 1500 2 0.32862234115600586
2 1500 6 0.3140125274658203
2 1500 4 0.31002330780029297
2 1500 8 0.38581323623657227
4 1500 2 0.23042988777160645
4 1500 6 0.34862184524536133
4 1500 4 0.38315749168395996
4 1500 8 0.3380446434020996
6 1500 2 0.3579683303833008
6 1500 6 0.32284045219421387
6 1500 8 0.27092480659484863
6 1500 4 0.4442875385284424
8 1500 6 0.21966838836669922
8 1500 2 0.3737967014312744
8 1500 8 0.43431615829467773
8 1500 4 0.3840346336364746
2 2000 6 0.7189702987670898
2 2000 2 0.6772110462188721
2 2000 8 0.7457077503204346
2 2000 4 0.785330057144165
4 2000 2 0.6717123985290527
4 2000 6 0.763556718826294
4 2000 8 0.7111761569976807
4 2000 4 0.6871535778045654
6 2000 2 0.8385684490203857
6 2000 6 0.8660447597503662
6 2000 4 0.6143951416015625
6 2000 8 0.8816730976104736
8 2000 2 0.7044491767883301
8 2000 6 0.6949238777160645
8 2000 4 0.681999683380127
8 2000 8 0.6115310192108154
2 2500 2 1.279449701309204
2 2500 6 1.2550933361053467
2 2500 4 1.2475287914276123
2 2500 8 1.268549919128418
4 2500 2 1.25777006149292
4 2500 4 1.1574864387512207
4 2500 6 1.488180160522461
4 2500 8 1.4855754375457764
6 2500 4 1.3532946109771729
6 2500 2 1.4952192306518555
6 2500 6 1.5157535076141357
6 2500 8 1.5920727252960205
8 2500 2 1.322680950164795
8 2500 4 1.4616069793701172
8 2500 6 1.1175310611724854
8 2500 8 0.9550080299377441"""

measurements = data.split("\n")
times2, sizes2 = list(), list()
times4, sizes4 = list(), list()
times6, sizes6 = list(), list()
times8, sizes8 = list(), list()
for measurement in measurements:
    threads, size, processes, time = measurement.split()
    if int(threads) == 2 and int(processes) == 2:
        times2.append(round(float(time), 3))
        sizes2.append(int(size))
    if int(threads) == 4 and int(processes) == 2:
        times4.append(round(float(time), 3))
        sizes4.append(int(size))
    if int(threads) == 6 and int(processes) == 2:
        times6.append(round(float(time), 3))
        sizes6.append(int(size))
    if int(threads) == 8 and int(processes) == 2:
        times8.append(round(float(time), 3))
        sizes8.append(int(size))

import matplotlib.pyplot as plt

plt.plot(sizes2, times2, label="2 Threads", alpha=0.6, marker="o")
plt.plot(sizes4, times4, label="4 Threads", alpha=0.6, marker="o")
plt.plot(sizes6, times6, label="6 Threads", alpha=0.6, marker="o")
plt.plot(sizes8, times8, label="8 Threads", alpha=0.6, marker="o")
plt.title("Machine has 4 cores + 4 'virtual cores'")
plt.legend()
plt.show()
